{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger Sera Backend Developer Test",
        "description": "Ocky Nurrahman",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "apiteam@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "summary": "Register user",
                "operationId": "RegisterUser",
                "requestBody": {
                    "description": "Register user object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {},
                            "example": {
                                "name": "admin",
                                "email": "admin@admin.dev",
                                "password": "password"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "summary": "login user",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {},
                            "example": {
                                "email": "admin@admin.dev",
                                "password": "password"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/me": {
            "get": {
                "summary": "user",
                "operationId": "userInfo",
                "responses": {
                    "default": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/logout": {
            "get": {
                "summary": "user",
                "operationId": "userLogout",
                "responses": {
                    "default": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/api/denom": {
            "get": {
                "summary": "Filter Array Denom",
                "operationId": "c07342ef5c2d607b17aae73f53f888cd",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/api/firebase": {
            "get": {
                "summary": "Index Data",
                "operationId": "91c20ed594015f049a6c7829c2eee1f3",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/api/firebase/store": {
            "post": {
                "summary": "Create data",
                "operationId": "15da2c6a4d3372cf103e36ac602fdddc",
                "requestBody": {
                    "description": "Create data object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {},
                            "example": {
                                "name": "admin"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/api/firebase/update/{id}": {
            "patch": {
                "summary": "Updated data",
                "operationId": "152a0daf42bf4c18b3787e6336277487",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated data object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {},
                            "example": {
                                "name": "admin"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/api/firebase/delete/{id}": {
            "delete": {
                "summary": "Delete data",
                "operationId": "d6198911f73eb4c90e13e22365756864",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The _id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "summary": "Index users",
                "operationId": "indexUser",
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "summary": "Create user",
                "operationId": "createUser",
                "requestBody": {
                    "description": "Updated user object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {},
                            "example": {
                                "name": "admin",
                                "email": "admin@admin.dev",
                                "password": "password"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "delete": {
                "summary": "Delete user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The _id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "patch": {
                "summary": "Updated user",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "_id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated user object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {},
                            "example": {
                                "name": "admin",
                                "email": "admin@admin.dev",
                                "password": "password"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid user supplied"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "apiAuth": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Token based Based",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}